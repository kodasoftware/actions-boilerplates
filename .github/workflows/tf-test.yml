on:
  workflow_call:
    inputs:
      aws-region:
        type: string
        required: false
        default: eu-west-2

      aws-role:
        type: string
        required: true

      continue-on-error:
        type: boolean
        required: false
        default: true

      environment:
        type: string
        required: true

      terraform-version:
        type: string
        required: false
        default: "1.1.7"
      
      tflint-version:
        type: string
        required: false
        default: v0.48.0

      working-directory:
        type: string
        required: false
        default: ./terraform

    secrets:
      GITHUB_TOKEN:
        required: true

permissions:
  id-token: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - id: tffmt
        name: Format Terraform
        uses: ./.github/actions/tf-fmt
        with:
          continue-on-error: ${{ inputs.continue-on-error }}
          setup: true
          terraform-version: ${{ inputs.terraform-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Comment format output to PR
        if: ${{ steps.tffmt.outputs.stdout != '' }}
        uses: ./.github/actions/pr-comment
        with:
          body: "### Formatting suggestions\n```hcl\n${{ steps.tffmt.outputs.stdout }}\n```"

      - id: tflint
        name: Lint Terraform
        uses: ./.github/actions/tf-lint
        with:
          continue-on-error: ${{ inputs.continue-on-error }}
          tflint-version: ${{ inputs.tflint-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Comment lint output to PR
        if: ${{ steps.tflint.outputs.stdout != '' }}
        uses: ./.github/actions/pr-comment
        with:
          body: "###Terraform Lint `${{ steps.tflint.conclusion }}`\n```hcl\n${{ steps.tflint.outputs.stdout }}\n```"

      - id: tfinit
        uses: ./.github/actions/tf-init
        with:
          terraform-version: ${{ inputs.terraform-version }}
          working-directory: ${{ inputs.working-directory }}
          workspace: ${{ inputs.environment }}

      - id: tfvalidate
        name: Validate Terraform
        uses: ./.github/actions/tf-validate
        with:
          continue-on-error: ${{ inputs.continue-on-error }}
          working-directory: ${{ inputs.working-directory }}

      - name: Comment validate output to PR
        if: ${{ steps.tfvalidate.outputs.stdout != '' }}
        uses: ./.github/actions/pr-comment
        with:
          body: "###Terraform Validation `${{ steps.tfvalidate.conclusion }}`\n```hcl\n${{ steps.tfvalidate.outputs.stdout }}\n```"
